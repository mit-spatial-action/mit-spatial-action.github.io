---
import 'mapbox-gl/dist/mapbox-gl.css';
const { lng, lat, zoom, mapstyle, bearing, accesstoken, interactive, seconds} = Astro.props;
---

<mapbox-map
  data-lat={lat}
  data-lng={lng}
  data-zoom={zoom}
  data-mapstyle={mapstyle}
  data-seconds={seconds}
  data-bearing={bearing}
  data-accesstoken={accesstoken}
  data-interactive={interactive}
>

<script>
    import mapboxgl from "mapbox-gl"
  
    class MapboxMap extends HTMLElement {
        constructor() {
            super()

            mapboxgl.accessToken = this.dataset.accesstoken
            let seconds = this.dataset.seconds;
            const map = new mapboxgl.Map({
                container: 'map',
                projection: 'globe',
                center: [this.dataset.lng, this.dataset.lat],
                // interactive: this.dataset.interactive,
                bearing: this.dataset.bearing,
                zoom: this.dataset.zoom,
                style: this.dataset.mapstyle
            })

            // map.on('moveend', () => {
            //     spinGlobe();
            // });

            // function spinGlobe() {
            //     let distancePerSecond = 360 / seconds;
            //     const cnt = map.getCenter();
            //     cnt.lng -= distancePerSecond;
            //     // Smoothly animate the map over one second.
            //     // When this animation is complete, it calls a 'moveend' event.
            //     map.easeTo({ cnt, duration: 1000, easing: (n) => n });
            // }
            
            // spinGlobe();
        }
    } 
    customElements.define("mapbox-map", MapboxMap);
</script>