---
import 'mapbox-gl/dist/mapbox-gl.css';
interface Props {
  lng: number;
  lat: number;
  zoom: number;
  mapstyle: string;
  bearing: number;
  accesstoken: string;
  interactive?: boolean;
  sec?: number;
}
const { lng, lat, zoom, mapstyle, bearing, accesstoken, interactive = false, sec} = Astro.props;

---

<mapbox-map 
  data-lat={lat}
  data-lng={lng}
  data-zoom={zoom}
  data-mapstyle={mapstyle}
  data-bearing={bearing}
  data-accesstoken={accesstoken}
  data-interactive={interactive}
  data-sec={sec}
>

<script>
    import mapboxgl from "mapbox-gl"
    class MapboxMap extends HTMLElement {
        constructor() {
            super()
            let dest = [-80, 42]
            let sec = Number(this.dataset.sec);
            mapboxgl.accessToken = this.dataset.accesstoken
            const map = new mapboxgl.Map({
                container: 'map',
                projection: 'globe',
                center: [this.dataset.lng, this.dataset.lat],
                interactive: this.dataset.interactive,
                bearing: this.dataset.bearing,
                zoom: this.dataset.zoom,
                style: this.dataset.mapstyle
            })

            if(sec > 0) {
                function spinGlobe(sec: number) {
                    let distancePerSecond = 360 / sec;
                    let cnt = map.getCenter();
                    cnt.lng -= distancePerSecond;
                    map.easeTo({ cnt, duration: 1000, easing: (n) => n });
                }
                map.on('moveend', () => {
                    spinGlobe(sec);
                });
                spinGlobe(sec);
            }
        }
    } 
    customElements.define("mapbox-map", MapboxMap);
</script>