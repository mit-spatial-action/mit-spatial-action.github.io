---
interface Props {
  navItems: {
    path: string;
    title: string;
  }[];
}

const {navItems} = Astro.props;
---

<nav class="navbar has-background-dark" role="navigation" aria-label="main navigation">
  <div class="navbar-brand has-background-dark has-text-white">
    <a role="button" class="navbar-burger has-text-white has-background-danger" data-target="navMenu" aria-label="menu" aria-expanded="false">
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </a>
  </div>
  <div id="navMenu" class="navbar-menu  has-background-dark">
    <div class="navbar-start  has-background-dark" id="navMenu">
        {
            navItems.map((item) => (
                <a class="navbar-item has-background-dark" href={item.path}><span class="tag is-danger is-large">{item.title}</span></a>
            ))
        }
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {

  // Get all "navbar-burger" elements
  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

  // Add a click event on each of them
  $navbarBurgers.forEach( el => {
    el.addEventListener('click', () => {

      // Get the target from the "data-target" attribute
      const target = el.dataset.target;
      const $target = document.getElementById(target);

      // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
      el.classList.toggle('is-active');
      $target.classList.toggle('is-active');

    });
  });

});
</script>